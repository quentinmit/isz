# TODO: Create quentin user
# TODO: Install RPi kernel and make w1 work
- hosts:
  - workshop.isz.wtf
  serial: 1
  vars:
    nginx_hsts_age: '{{ 60 * 60 }}'
    nginx_hsts_subdomains: False
    postfix__packages:
    - libsasl2-modules
    postfix__mailname: '{{ postfix__domain }}'
    postfix__lookup_tables:
    - name: smtp_sasl_password_maps.in
      mode: '0600'
      options:
      - name: "[{{ smtp_remote.host }}]:{{ smtp_remote.port | d(25) }}"
        value: "{{ smtp_remote.user }}:{{ smtp_remote.pass }}"
    postfix__maincf:
    - smtp_sasl_auth_enable: True
    - smtp_tls_security_level: encrypt
    - smtp_sasl_tls_security_options: noanonymous
    - relayhost: "[{{ smtp_remote.host }}]:{{ smtp_remote.port | d(25) }}"
    - smtp_sasl_password_maps:
      - "hash:${config_directory}/smtp_sasl_password_maps"
  pre_tasks:
    - name: Prepare etc_aliases environment
      ansible.builtin.import_role:
        name: 'debops.roles01.etc_aliases'
        tasks_from: 'main_env'
      tags: [ 'role::etc_aliases', 'role::secret', 'role::postfix' ]
    - name: Prepare postfix environment
      ansible.builtin.import_role:
        name: 'debops.roles01.postfix'
        tasks_from: 'main_env'
      tags: [ 'role::postfix', 'role::secret', 'role::ferm' ]
  roles:
  - role: avaya
    tags: [ 'role::avaya', 'skip::avaya' ]
  - role: debops.roles01.etc_aliases
    tags: [ 'role::etc_aliases', 'skip::etc_aliases' ]
  - role: debops.roles01.postfix
    tags: [ 'role::postfix', 'skip::postfix' ]
  tasks:
  - when: ansible_machine == "aarch64" and ansible_chassis_vendor == ""
    block:
    - copy:
        dest: /etc/default/raspi-firmware-custom
        content: |
          # Force HDMI out
          hdmi_force_hotplug=1
          disable_overscan=1
          # Force 1080p60
          hdmi_group=1
          hdmi_mode=16
    - name: Enable memory cgroups
      copy:
        dest: /etc/default/raspi-extra-cmdline
        content: cgroup_enable=memory cgroup_memory=1
    - when: custom_kernel | default(False)
      block: []
        # dpkg -i linux-{image,headers,libc-dev}-*
        # mkdir /boot/firmware/downstream
        # cp -R /usr/lib/linux-image-5.10.63-v8-isz+/overlays /boot/firmware/downstream/overlays
        # cp /usr/lib/linux-image-5.10.63-v8-isz+/broadcom/* /boot/firmware/downstream/
        # echo "console=serial0,115200 console=tty1 root=/dev/mmcblk0p2 rw fsck.repair=yes net.ifnames=0  rootwait cgroup_enable=memory cgroup_memory=1" >> /boot/firmware/downstream/cmdline.txt
        ## shouldn't be necessary
        # cp -R /usr/lib/linux-image-5.10.63-v8-isz+/overlays /boot/firmware/overlays
        ## install config.txt updates

