# Prerequisites:
# # apt update && apt install python-is-python3
# Copy in /etc/resolv.conf
# Copy in /etc/ssh/*key* and /etc/ssh/moduli
# Copy in /root/.ssh
# TODO: Create quentin user
# TODO: Install RPi kernel and make w1 work
- hosts: workshop-pi.isz.wtf
  serial: 1
  vars:
    ansible_processor_cores: 4
    ansible_processor_vcpus: 4
    avaya_domain: isz.wtf
    pki_ca_domain: isz.wtf
    pki_acme_ca: le-live-v2
    pki_acme: True
    pki_acme_contacts: [ mailto:quentin@mit.edu ]
    pki_enabled: True
    pki_internal: False
    pki_download_extra: False
    pki_realms:
    - name: grafana.isz.wtf
    - name: influx.isz.wtf
    - name: atuin.isz.wtf
    - name: homeassistant.isz.wtf
      acme_domains: [ hass.isz.wtf ]
    - name: pbx.isz.wtf
    - name: mqtt.isz.wtf
    nginx_hsts_age: '{{ 60 * 60 }}'
    nginx_hsts_subdomains: False
    nginx_welcome_domain: icestationzebra.isz.wtf
    nginx_default_name: welcome
    nginx_pki: True
    nginx__servers:
    - name: [ grafana.isz.wtf, grafana.isz ]
      pki_realm: grafana.isz.wtf
      type: proxy
      proxy_pass: http://workshop-pi.isz:3000/
    - name: [ influx.isz.wtf, influx.isz ]
      pki_realm: influx.isz.wtf
      type: proxy
      proxy_pass: http://workshop-pi.isz:8086/
    - name: [ atuin.isz.wtf, atuin.isz ]
      pki_realm: atuin.isz.wtf
      type: proxy
      proxy_pass: http://172.19.0.9:8888/
    - name: [ homeassistant.isz.wtf, homeassistant.isz, hass.isz.wtf, hass.isz ]
      pki_realm: homeassistant.isz.wtf
      type: proxy
      proxy_pass: http://127.0.0.1:8123/
      options: |
        proxy_buffering off;
      proxy_options: |
        proxy_redirect http:// https://;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
    - name: pbx.isz.wtf
      pki_realm: pbx.isz.wtf
      type: proxy
      proxy_pass: http://172.18.0.100:80/
    mosquitto__allow:
    - 172.30.96.0/24
    - 192.168.88.0/24
    mosquitto__websockets_packages:
    - libwebsockets16
    mosquitto__pki_broker_realm: '{{ mosquitto__fqdn }}'
    mosquitto__nginx_extra_config:
      pki_realm: '{{ mosquitto__fqdn }}'
      hsts_enabled: false
      redirect_to_ssl: false
    networkd_interfaces:
    - name: br0
      mac_address: dc:a6:32:d3:49:0c
      address: dhcp
      bridge_pvid: 3096
      bridge_vlans: [ 3097, 500 ]
      vlan_interfaces: [ vlan3097 ]
    - name: eth0
      bridge: br0
      bridge_pvid: 3096
      bridge_vlans: [ 3097, 500 ]
    - name: usb0
      bridge: br0
      bridge_pvid: 500
    - name: vlan3097
      vlan: 3097
      address: 172.30.97.32/24
  pre_tasks:
    - name: Prepare pki environment
      import_role:
        name: 'debops.debops.pki'
        tasks_from: 'main_env'
      tags: [ 'role::pki', 'role::pki:secret', 'role::secret' ]
  roles:
  - role: networkd
  - role: debops.debops.global_handlers
  - role: debops.debops.pki
    pki_acme_default_subdomains: []
    tags: [ 'role::pki', 'skip::pki', 'role::nginx', 'role::mosquitto' ]
  - role: debops.debops.python
    tags: [ 'role::python', 'skip::python', 'role::nginx', 'role::mosquitto' ]
    python__dependent_packages3:
      - '{{ nginx__python__dependent_packages3 }}'
      - '{{ mosquitto__python__dependent_packages3 }}'
    python__dependent_packages2:
      - '{{ nginx__python__dependent_packages2 }}'
      - '{{ mosquitto__python__dependent_packages2 }}'
  - role: avaya
    tags: [ 'role::avaya', 'skip::avaya' ]
  - role: debops.roles01.nginx
    tags: [ 'role::nginx', 'skip::nginx' ]
    nginx__dependent_servers:
      - '{{ avaya__nginx__dependent_servers }}'
      - '{{ [mosquitto__nginx__dependent_servers[0] | combine(mosquitto__nginx_extra_config)] }}'
    nginx__dependent_upstreams:
      - '{{ mosquitto__nginx__dependent_upstreams }}'
  - role: debops.roles02.mosquitto
    tags: [ 'role::mosquitto', 'skip::mosquitto' ]
  - role: podman
    tags: [ 'role::podman', 'skip::podman' ]
  tasks:
  - name: Install utilities
    package:
      name:
      - apt-file
      - bash-completion
      - bsdmainutils
      - bind9-host
      - bwm-ng
      - command-not-found
      - cpuset
      - curl
      - debsums
      - emacs-nox
      - exfat-utils
      - fping
      #- glances
      - htop
      - info
      - iotop
      - jq
      - lsof
      - man-db
      - mlocate
      - mtr-tiny
      - ncdu
      - netcat
      - nmap
      #- rfkill
      - rsync
      - screen
      - socat
      - sqlite3
      - strace
      - sysstat
      - telnet
      - tree
      - tshark
      - usbutils
      - v4l-utils
      - wget
      # For isdttool
      - python3-hidapi
      - libusb-dev
      - libusb-1.0-0-dev
      - libudev-dev
  - command: update-command-not-found
    args:
      creates: /var/lib/command-not-found/commands.db
  - package:
      name:
      - bridge-utils
      - certbot
      - device-tree-compiler
      - docker-compose
      - docker.io
      - fbset
      - ffmpeg
      - golang
      - i2c-tools
      - iptables
      - net-tools
      - podman
      - python3-venv
      #- raspberrypi-kernel
      - snmp
      - snmp-mibs-downloader
      - vlan
      - wireless-regdb
      - wireless-tools
  - file:
      path: /etc/systemd/system/nginx.service.d
      state: directory
  - copy:
      dest: /etc/systemd/system/nginx.service.d/isz.conf
      content: |
        [Unit]
        After=network-online.target
        Wants=network-online.target
        [Service]
        Restart=on-failure
    notify: Reload service manager
  - copy:
      dest: /etc/udev/rules.d/99-isz.rules
      content: |
        SUBSYSTEM=="tty", ATTRS{product}=="Epic-PWRgate", RUN+="/usr/bin/ln -f $devnode /dev/ttyPwrgate"
        SUBSYSTEM=="tty", ATTRS{idProduct}=="0200", ATTRS{idVendor}=="0658", RUN+="/usr/bin/ln -f $devnode /dev/ttyZwave"
  - blockinfile:
      path: /root/.bashrc
      block: |
        export PATH=/root/go/bin:$PATH

        export HISTSIZE=100000
  - file:
      path: /root/.config/git
      state: directory
  - copy:
      dest: /root/.config/git/ignore
      content: |
        *~
  - copy:
      dest: /root/.emacs
      content: |
        (require 'package)
        (add-to-list 'package-archives '("melpa" . "https://melpa.org/packages/") t)
        (package-initialize)
        (custom-set-variables
         ;; custom-set-variables was added by Custom.
         ;; If you edit it by hand, you could mess it up, so be careful.
         ;; Your init file should contain only one such instance.
         ;; If there is more than one, they won't work right.
         '(gofmt-command "goimports")
         '(ido-mode (quote both) nil (ido))
         '(package-selected-packages (quote (dockerfile-mode go-mode yaml-mode))))
        (custom-set-faces
         ;; custom-set-faces was added by Custom.
         ;; If you edit it by hand, you could mess it up, so be careful.
         ;; Your init file should contain only one such instance.
         ;; If there is more than one, they won't work right.
         )
        (setq gnutls-algorithm-priority "NORMAL:-VERS-TLS1.3")
        (defun go-mode-setup ()
         ;(go-eldoc-setup)
         (add-hook 'before-save-hook 'gofmt-before-save))
        (add-hook 'go-mode-hook 'go-mode-setup)
      
  - copy:
      dest: /etc/default/raspi-firmware-custom
      content: |
        # Enable I2C port
        dtparam=i2c_arm=on
        
        # Enable 1-wire port
        dtoverlay=w1-gpio,gpiopin=17
        
        # Force HDMI out
        hdmi_force_hotplug=1
        disable_overscan=1
        # Force 1080p60
        hdmi_group=1
        hdmi_mode=16
  - copy:
      dest: /root/.gitconfig
      content: |
        # This is Git's per-user configuration file.
        [user]
        # Please adapt and uncomment the following lines:
                name = Quentin Smith
                email = quentin@mit.edu
        [alias]
                up = pull --rebase
                k = log --graph --abbrev-commit --pretty=oneline --decorate
  - when: custom_kernel | default(False)
    block: []
      # dpkg -i linux-{image,headers,libc-dev}-*
      # mkdir /boot/firmware/downstream
      # cp -R /usr/lib/linux-image-5.10.63-v8-isz+/overlays /boot/firmware/downstream/overlays
      # cp /usr/lib/linux-image-5.10.63-v8-isz+/broadcom/* /boot/firmware/downstream/
      # echo "console=serial0,115200 console=tty1 root=/dev/mmcblk0p2 rw fsck.repair=yes net.ifnames=0  rootwait" >> /boot/firmware/downstream/cmdline.txt
      ## shouldn't be necessary
      # cp -R /usr/lib/linux-image-5.10.63-v8-isz+/overlays /boot/firmware/overlays
      ## install config.txt updates
