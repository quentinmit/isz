#!/run/bin/busybox sh
# udhcpc script edited by Tim Riker <Tim@Rikers.org>

RESOLV_CONF="/etc/resolv.conf"

[ -n "$1" ] || { echo "Error: should be called from udhcpc"; exit 1; }

IP="/run/bin/busybox ip"

NETMASK=""
[ -n "$subnet" ] && NETMASK="/$subnet"
BROADCAST="broadcast +"
[ -n "$broadcast" ] && BROADCAST="broadcast $broadcast"

set -x

case "$1" in
        deconfig)
                echo "Setting IP address 0.0.0.0 on $interface"
                $IP link set $interface up
                $IP addr flush dev $interface
                ;;

        renew|bound)
                echo "Setting IP address $ip on $interface"
                $IP addr add $ip$NETMASK $BROADCAST dev $interface

                if [ -n "$router" ] ; then
                        echo "Deleting routers"
                        while $IP route del default dev $interface 2>/dev/null; do
                                :
                        done

                        metric=0
                        for i in $router ; do
                                echo "Adding router $i"
                                if [ "$subnet" = "255.255.255.255" ]; then
        # special case for /32 subnets:
        # /32 instructs kernel to always use routing for all outgoing packets
        # (they can never be sent to local subnet - there is no local subnet for /32).
        # Used in datacenters, avoids the need for private ip-addresses between two hops.
                                        $IP route add $i dev $interface
                                fi
                                $IP route add default via $i dev $interface metric $metric
                                metric=$((metric+1))
                        done
                fi

                if [ -e "$RESOLV_CONF" ] && [ ! -w "$RESOLV_CONF" ]; then
                    echo "Unable to overwrite $RESOLV_CONF"
                else
                    echo "Recreating $RESOLV_CONF"
                    # If the file is a symlink somewhere (like /etc/resolv.conf
                    # pointing to /run/resolv.conf), make sure things work.
                    realconf=$(readlink -f "$RESOLV_CONF" 2>/dev/null || echo "$RESOLV_CONF")
                    tmpfile="$realconf-$$"
                    > "$tmpfile"
                    [ -n "$domain" ] && echo "search $domain" >> "$tmpfile"
                    for i in $dns ; do
                        echo " Adding DNS server $i"
                        echo "nameserver $i" >> "$tmpfile"
                    done
                    mv "$tmpfile" "$realconf"
                fi
                ;;
esac

exit 0
