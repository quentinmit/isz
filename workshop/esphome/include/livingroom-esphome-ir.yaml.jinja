{%- macro sanitize(name) -%}
{% if name == "-" %}dash{% else %}{{ name | replace(" ", "_") | replace("+", "_up") | replace("-", "_down") | replace(".","_") }}{% endif %}
{%- endmacro -%}
{%- macro nec_button(address, function, device_name, name, icon) -%}
- platform: template
  name: {{ device_name }} - {{ name }}
  id: ir_{{ sanitize(device_name | lower) }}_{{ sanitize(name) }}
  {%- if icon %}
  icon: {{ icon }}
  {%- endif %}
  on_press:
    then:
    - remote_transmitter.transmit_nec:
        address: {{ address }}
        command: {{ necformat(function) }}
{% endmacro -%}
{%- macro device_buttons(device_name, device) -%}
{%- set address = necformat(device.d, device.s|d(None)) -%}
{%- for function, name in device.functions.items(): %}
{{ nec_button(address, function, device_name, name, ir_icons.get(name)) }}
{% endfor -%}
{%- endmacro -%}
{%- macro device_mqtt(device_name, device) -%}
{% for name in device.functions.values() %}
  - topic: livingroom/ir/{{ device_name | lower }}/tx
    payload: {{ name | tojson }}
    then:
    - button.press: ir_{{ device_name | lower }}_{{ sanitize(name) }}
{% endfor %}
{%- endmacro -%}

{#
# Doesn't work and the button component auto-generates MQTT buttons.
mqtt:
  on_message:
  {{ device_mqtt("Receiver", receiver_ir) }}
  {{ device_mqtt("TV", tv_ir) }}
#}

button:
- platform: safe_mode
  name: "Living Room Restart (Safe Mode)"
{{ device_buttons("Receiver", receiver_ir) }}
{{ device_buttons("TV", tv_ir) }}
{{ device_buttons("HDMI Switch", hdmi_switch_ir) }}

{% macro tv_input(name, tv_port, switch_port=None) %}
  - if:
      condition:
        lambda: |-
          return x == "{{ name }}";
      then:
      - button.press: ir_tv_dash
      - delay: 100ms
      {%- for _ in range(tv_port) %}
      - button.press: ir_tv_input
      - delay: 100ms
      {%- endfor %}
      - button.press: ir_tv_enter
      - delay: 100ms
      {%- if switch_port is not none %}
      - button.press: ir_hdmi_switch_{{ switch_port }}
      {%- endif %}
{% endmacro %}

select:
- platform: template
  name: "Receiver Source"
  optimistic: true
  options: {{ receiver_sources.keys() | list | tojson }}
  set_action:
  {%- for key, value in receiver_sources.items() %}
  - if:
      condition:
        lambda: |-
          return x == "{{ key }}";
      then: {% if value is string -%}
      { button.press: ir_receiver_{{value}} }
      {%- else -%}
      {{ value | tojson }}
      {%- endif %}
  {%- endfor %}
- platform: template
  name: "TV Source"
  optimistic: true
  options: {{ flatten(tv_sources) | tojson }}
  set_action:
  {%- for name in tv_sources %}
  {%- if name is string %}
  {{- tv_input(name, loop.index) }}
  {%- else %}
  {%- set tv_port = loop.index %}
  {%- for name in name %}
  {{- tv_input(name, tv_port, loop.index) }}
  {%- endfor %}
  {%- endif %}
  {%- endfor %}