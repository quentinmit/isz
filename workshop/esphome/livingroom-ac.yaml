# GPIO 0 - Red LED, active low
# GPIO 1 - "RX" (UART0 TX) / 1-Wire
# GPIO 2 - Blue LED, active low
# GPIO 3 - "TX" (UART0 RX) / IR LED
# GPIO 4 - Relay output, active high
# GPIO 5 - Power monitoring CF pin
# GPIO 12 - Power monitoring SEL pin
# GPIO 13 - Button input, requires pullup R
# GPIO 14 - Power monitoring CF1 pin
# GPIO 15 - ??? (3.2V, resistor pulldown to ground)

# Module pinout
# Voltage sense?
# Current sense -
# Current sense +
# Gnd / 1.5V?
# GPIO 15 / RST?
# GPIO 1 "RX" / GPIO 3 "TX"
# GPIO 13 button / GPIO 2 blue LED
# 3.3V? / GPIO 4 relay
# GPIO 0 red LED / Vcc 3.3V

substitutions:
  name: livingroom-ac
  friendly_name: Living Room AC
  voltage_divider: "2078"

esphome:
  friendly_name: Living Room AC

packages:
  kauf_plug_base: !include include/kauf-plug-base.yaml
  frigidaire_ac_ir: !include include/frigidaire-ac-ir.yaml

binary_sensor:
- id: !extend front_button
  on_press:
    then:
      if:
        condition:
          lambda: return id(livingroom_ac).mode != CLIMATE_MODE_OFF;
        then:
          climate.control:
            id: livingroom_ac
            mode: "OFF"
        else:
          climate.control:
            id: livingroom_ac
            mode: COOL

sensor:
- platform: dallas_temp
  address: 0x6600000284ba8b28
  name: Temperature
  id: temperature
  accuracy_decimals: 4
  update_interval: 10s

text_sensor:
- platform: template
  name: Status
  update_interval: 5s
  lambda: !lambda |-
    float watts = id(power).state;
    if (watts > 150) {
    return std::string("Cool On"); // 500W
    } else if (watts > 50) {
    return std::string("Fan On"); // 112W
    }
    return std::string("Standby"); // 0.7W

climate:
- platform: frigidaire_ac
  name: None
  id: livingroom_ac
  temperature_sensor: temperature
  power_sensor: power
