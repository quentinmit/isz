diff --git a/homeassistant/components/esphome/entity.py b/homeassistant/components/esphome/entity.py
index 15c136f17c..a1dae4a953 100644
--- a/homeassistant/components/esphome/entity.py
+++ b/homeassistant/components/esphome/entity.py
@@ -7,6 +7,7 @@ import math
 from typing import (  # pylint: disable=unused-import
     Any,
     Generic,
+    Optional,
     TypeVar,
     cast,
 )
@@ -30,11 +31,12 @@ from homeassistant.helpers.dispatcher import (
 )
 from homeassistant.helpers.entity import DeviceInfo, Entity
 from homeassistant.helpers.entity_platform import AddEntitiesCallback
+from homeassistant.util import slugify
 
 from .domain_data import DomainData
 
 # Import config flow so that it's added to the registry
-from .entry_data import RuntimeEntryData
+from .entry_data import RuntimeEntryData, INFO_TYPE_TO_PLATFORM
 from .enum_mapper import EsphomeEnumMapper
 
 _R = TypeVar("_R")
@@ -141,6 +143,7 @@ class EsphomeEntity(Entity, Generic[_InfoT, _StateT]):
     _static_info: _InfoT
     _state: _StateT
     _has_state: bool
+    _entity_id: Optional[str] = None
 
     def __init__(
         self,
@@ -163,6 +166,20 @@ class EsphomeEntity(Entity, Generic[_InfoT, _StateT]):
         )
         self._entry_id = entry_data.entry_id
 
+    @property
+    def entity_id(self):
+        # Can't set this in __init__ because self._static_info doesn't exist yet.
+        if self._entity_id:
+            return self._entity_id
+        if self._static_info.object_id:
+            platform = INFO_TYPE_TO_PLATFORM[type(self._static_info)]
+            return "%s.%s" % (platform, slugify(self._static_info.object_id))
+        return None
+    @entity_id.setter
+    def entity_id(self, entity_id):
+        self._entity_id = entity_id
+
+
     async def async_added_to_hass(self) -> None:
         """Register callbacks."""
         entry_data = self._entry_data
