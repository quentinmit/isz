diff --git a/homeassistant/components/esphome/entity.py b/homeassistant/components/esphome/entity.py
index 8241d0f456..9bd030e458 100644
--- a/homeassistant/components/esphome/entity.py
+++ b/homeassistant/components/esphome/entity.py
@@ -5,7 +5,7 @@ from __future__ import annotations
 from collections.abc import Awaitable, Callable, Coroutine
 import functools
 import math
-from typing import TYPE_CHECKING, Any, Concatenate, Generic, ParamSpec, TypeVar, cast
+from typing import TYPE_CHECKING, Any, Concatenate, Generic, Optional, ParamSpec, TypeVar, cast
 
 from aioesphomeapi import (
     APIConnectionError,
@@ -25,9 +25,10 @@ import homeassistant.helpers.device_registry as dr
 from homeassistant.helpers.device_registry import DeviceInfo
 from homeassistant.helpers.entity import Entity
 from homeassistant.helpers.entity_platform import AddEntitiesCallback
+from homeassistant.util import slugify
 
 # Import config flow so that it's added to the registry
-from .entry_data import ESPHomeConfigEntry, RuntimeEntryData
+from .entry_data import ESPHomeConfigEntry, RuntimeEntryData, INFO_TYPE_TO_PLATFORM
 from .enum_mapper import EsphomeEnumMapper
 
 _R = TypeVar("_R")
@@ -180,6 +181,7 @@ class EsphomeEntity(Entity, Generic[_InfoT, _StateT]):
     _static_info: _InfoT
     _state: _StateT
     _has_state: bool
+    _entity_id: Optional[str] = None
 
     def __init__(
         self,
@@ -220,6 +222,20 @@ class EsphomeEntity(Entity, Generic[_InfoT, _StateT]):
         self._attr_has_entity_name = True
         self.entity_id = f"{domain}.{device_info.name}_{entity_info.object_id}"
 
+    @property
+    def entity_id(self):
+        # Can't set this in __init__ because self._static_info doesn't exist yet.
+        if self._entity_id:
+            return self._entity_id
+        if self._static_info.object_id:
+            platform = INFO_TYPE_TO_PLATFORM[type(self._static_info)]
+            return "%s.%s" % (platform, slugify(self._static_info.object_id))
+        return None
+    @entity_id.setter
+    def entity_id(self, entity_id):
+        self._entity_id = entity_id
+
+
     async def async_added_to_hass(self) -> None:
         """Register callbacks."""
         entry_data = self._entry_data
